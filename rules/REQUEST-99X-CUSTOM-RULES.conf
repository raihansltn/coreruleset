SecRuleEngine On

# --- SQL Injection Protection ---
SecRule ARGS "(\bunion\b.*\bselect\b|\bor\b\s+\d+=\d+|--|#|/\*)" \
    "id:100001,phase:2,deny,status:403,msg:'SQL Injection Attempt Detected'"

# --- XSS Protection ---
SecRule ARGS "(<script|javascript:|onmouseover|onerror|alert\()" \
    "id:100002,phase:2,deny,status:403,msg:'XSS Attack Attempt Detected'"

# --- Remote Code Execution (RCE) ---
SecRule ARGS "(\bwget\b|\bcurl\b|\bpython\b|\bperl\b|\bbash\b|\bphp\b)" \
    "id:100003,phase:2,deny,status:403,msg:'Remote Code Execution Attempt'"

# --- Command Injection Protection ---
SecRule ARGS "(;|&&|\|\||`|\$\()" \
    "id:100004,phase:2,deny,status:403,msg:'Command Injection Attempt Detected'"

# --- SSRF Protection ---
SecRule ARGS "(http:\/\/127\.0\.0\.1|http:\/\/localhost|http:\/\/0\.0\.0\.0)" \
    "id:100005,phase:2,deny,status:403,msg:'SSRF Attempt Detected'"

# --- File Upload Restriction ---
SecRule FILES_NAMES "\.(php|jsp|exe|sh|py|pl|cgi|bat)$" \
    "id:100006,phase:2,deny,status:403,msg:'Blocked Dangerous File Upload'"

# --- Custom Bot Detection ---
SecRule REQUEST_HEADERS:User-Agent "(curl|wget|python-requests|scrapy)" \
    "id:100007,phase:1,deny,status:403,msg:'Bot Detected'"

# --- WAF Evasion Prevention ---
SecRule ARGS "(base64_decode\(|eval\(|gzinflate\(|str_rot13\()" \
    "id:100008,phase:2,deny,status:403,msg:'WAF Bypass Attempt Detected'"

# --- API Security (Blocking XML External Entity Attacks) ---
SecRule REQUEST_HEADERS:Content-Type "text/xml" \
    "id:100009,phase:1,deny,status:403,msg:'Blocked Potential XML Attack'"

# --- Rate Limiting (Per IP) ---
SecAction "id:100010,phase:1,initcol:IP=%{REMOTE_ADDR},nolog,pass"
SecRule IP:COUNTER "@gt 10" "id:100011,phase:1,deny,status:429,msg:'Too Many Requests from IP'"
SecAction "id:100012,phase:1,pass,setvar:IP.COUNTER=+1"

